<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="sitecore" type="Sitecore.Configuration.ConfigReader, Sitecore.Kernel" />
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, Sitecore.Logging" />
  </configSections>
  
  <appSettings>
    <add key="samplekml" value="..\..\data\sample import data\Topcastles_Netherlands.kml"/>
    <add key="samplekml_unparseable" value="..\..\data\sample import data\Topcastles_Netherlands_unparseable.kml"/>
    <add key="sampleimage" value="..\..\data\sample import data\cdm.png"/>
  </appSettings>

  <connectionStrings>
    <add name="core" connectionString="fake" />
    <add name="master" connectionString="fake" />
    <add name="web" connectionString="fake" />
  </connectionStrings>
  
  <sitecore>
<!--    <sc.variable name="dataFolder" value="..\..\data\" />-->
    <settings>
      <setting name="LicenseFile" value="C:\Github\Sitecore-FixtureDataProvider\lib\license.xml" />
    </settings>
    
    <dataProviders>
      <fixturedatamaster type="FixtureDataProvider.FixtureDataProvider, FixtureDataProvider">
        <!-- Enter pipe separated paths to directories containing serialized data, directories containing TDS items or individual package files (zip) -->
        <param desc="sources">..\..\data\serializeddata\master|..\..\data\packages\Kml template.zip</param>
      </fixturedatamaster>
    </dataProviders>
    
    <databases>
      <database id="core" singleInstance="true" type="Sitecore.Data.Database, Sitecore.Kernel">
        <param desc="name">$(id)</param>
        <icon>People/16x16/cubes_blue.png</icon>
        <!--<dataProviders hint="list:AddDataProvider">
          <dataProvider ref="dataProviders/fixturedatacore">
          </dataProvider>
        </dataProviders>-->
        <securityEnabled>false</securityEnabled>
        <proxiesEnabled>false</proxiesEnabled>
        <publishVirtualItems>false</publishVirtualItems>
      </database>
      <database id="master" singleInstance="true" type="Sitecore.Data.Database, Sitecore.Kernel">
        <param desc="name">$(id)</param>
        <icon>People/16x16/cubes_blue.png</icon>
        <dataProviders hint="list:AddDataProvider">
          <dataProvider ref="dataProviders/fixturedatamaster">
          </dataProvider>
        </dataProviders>
        <securityEnabled>false</securityEnabled>
        <proxiesEnabled>false</proxiesEnabled>
        <publishVirtualItems>false</publishVirtualItems>
      </database>
    </databases>
    <itemManager defaultProvider="default">
      <providers>
        <clear />
        <add name="default" type="Sitecore.Data.Managers.ItemProvider, Sitecore.Kernel" />
      </providers>
    </itemManager>
    <!-- PIPELINES -->
    <pipelines>
      <initialize>
      </initialize>
      <shutdown>
      </shutdown>
      <preprocessRequest>
      </preprocessRequest>
      <httpRequestBegin>
      </httpRequestBegin>
      <httpRequestEnd>
      </httpRequestEnd>
      <job>
      </job>
      <publish>
      </publish>
      <publishItem>
      </publishItem>
      <renderLayout>
      </renderLayout>
      <healthMonitor>
      </healthMonitor>
      <sessionEnd>
      </sessionEnd>
      <getMediaStream>
      </getMediaStream>
      <setupEditFrame>
      </setupEditFrame>
      <expandInitialFieldValue>
      </expandInitialFieldValue>
      <expandBranchItemName>
      </expandBranchItemName>
      <convertToDesignTimeHtml>
      </convertToDesignTimeHtml>
      <convertToRuntimeHtml>
      </convertToRuntimeHtml>
      <fixXHtml>
      </fixXHtml>
      <renderItemTile>
      </renderItemTile>
      <getAboutInformation>
      </getAboutInformation>
      <getLookupSourceItems>
      </getLookupSourceItems>
      <getRenderingPreview>
      </getRenderingPreview>
      <getContentEditorFields>
      </getContentEditorFields>
      <getContentEditorSkin>
      </getContentEditorSkin>
      <getContentEditorWarnings>
      </getContentEditorWarnings>
      <getPlaceholderRenderings>
      </getPlaceholderRenderings>
      <getQueryState>
      </getQueryState>
      <renderContentEditor>
      </renderContentEditor>
      <renderField>
      </renderField>
      <search>
      </search>
      <getSyndicationWarnings>
      </getSyndicationWarnings>
      <word.parseDocx>
      </word.parseDocx>
      <word.renderHtml>
      </word.renderHtml>
      <filterItem>
      </filterItem>
      <insertRenderings>
      </insertRenderings>
      <getChromeData>
      </getChromeData>
      <getRenderingDatasource>
      </getRenderingDatasource>
      <loadRichTextContent>
      </loadRichTextContent>
      <saveRichTextContent>
      </saveRichTextContent>
      <getMediaCreatorOptions>
      </getMediaCreatorOptions>
    </pipelines>
    <!-- AUTHENTICATION -->
    <authentication defaultProvider="forms">
      <providers>
        <clear />
        <add name="forms" type="Sitecore.Security.Authentication.FormsAuthenticationProvider, Sitecore.Kernel" />
      </providers>
    </authentication>
    <httpAuthentication defaultProvider="Basic">
      <providers>
        <clear />
        <add name="Basic" type="Sitecore.Security.Authentication.BasicHttpAuthenticationProvider, Sitecore.Kernel">
          <Realm>sitecore</Realm>
        </add>
      </providers>
    </httpAuthentication>
    <!-- USERS -->
    <userManager enabled="true">
      <providers>
        <clear />
      </providers>
    </userManager>
    <!-- ROLES -->
    <rolesInRolesManager enabled="true">
      <providers>
        <clear />
      </providers>
    </rolesInRolesManager>
    <!-- AUTHORIZATION -->
    <authorization defaultProvider="allowall">
      <providers>
        <clear />
        <add name="allowall" type="FixtureDataProvider.Mocking.AlwaysAllowAuthorizationProvider, FixtureDataProvider" />
      </providers>
    </authorization>
    <!-- 
      ACCESS RIGHTS 
      Example of a <rights> element using a custom type (which must derive from AccessRight):
      <add name="my:access" comment="Custom right." title="Custom" type="My.Security.MyAccessRight, My.Assembly"/> 
      
      Example of a <rules> element using a custom type (which must derive from AcessRightRule):
      <add prefix="my:" typeName="My.MyEntity" type="My.MyAcessRightRule, My.Assembly"/>
      -->
    <accessRights defaultProvider="config">
      <providers>
        <clear />
        <add name="config" type="Sitecore.Security.AccessControl.ConfigAccessRightProvider, Sitecore.Kernel" configRoot="accessRights" />
      </providers>
      <rights defaultType="Sitecore.Security.AccessControl.AccessRight, Sitecore.Kernel">
        <add name="field:read" comment="Read right for fields." title="Field Read" />
        <add name="field:write" comment="Write right for fields." title="Field Write" modifiesData="true" />
        <add name="item:read" comment="Read right for items." title="Read" />
        <add name="item:write" comment="Write right for items." title="Write" modifiesData="true" />
        <add name="item:rename" comment="Rename right for items." title="Rename" modifiesData="true" />
        <add name="item:create" comment="Create right for items." title="Create" modifiesData="true" />
        <add name="item:delete" comment="Delete right for items." title="Delete" modifiesData="true" />
        <add name="item:admin" comment="Admin right for items." title="Administer" modifiesData="true" />
        <add name="language:read" comment="Read right for languages." title="Language Read" />
        <add name="language:write" comment="Write right for languages." title="Language Write" modifiesData="true" />
        <add name="site:enter" comment="The right to enter a site." title="Site Enter" />
        <add name="insert:show" comment="Determines if the user can see the insert option" title="Show in Insert" />
        <add name="workflowState:delete" comment="The right to delete an item based on its workflow state." title="Workflow State Delete" />
        <add name="workflowState:write" comment="The right to write an item based on its workflow state." title="Workflow State Write" modifiesData="true" />
        <add name="workflowCommand:execute" comment="The right to execute a workflow command." title="Workflow Command Execute" />
        <add name="*" comment="Wildcard right. For internal use only." />
      </rights>
      <rules>
        <add prefix="field:" ancestor="{3C1715FE-6A13-4FCF-845F-DE308BA9741D}" comment="/sitecore/templates" />
        <add prefix="insert:" templateId="{35E75C72-4985-4E09-88C3-0EAC6CD1E64F}" comment="insert:show for Branch template" />
        <add prefix="insert:" templateId="{B2613CC1-A748-46A3-A0DB-3774574BD339}" comment="insert:show for Command template" />
        <add prefix="insert:" templateId="{AB86861A-6030-46C5-B394-E8F99E8B87DB}" comment="insert:show for Template template" />
        <add prefix="item:" typeName="Sitecore.Data.Items.Item" />
        <add prefix="language:" ancestor="{64C4F646-A3FA-4205-B98E-4DE2C609B60F}" comment="/sitecore/system/language" />
        <add prefix="workflowState:" ancestor="{05592656-56D7-4D85-AACF-30919EE494F9}" comment="/sitecore/system/workflows" />
        <add prefix="workflowCommand:" ancestor="{05592656-56D7-4D85-AACF-30919EE494F9}" comment="/sitecore/system/workflows" />
      </rules>
    </accessRights>
    <!-- CONFIG STORES -->
    <configStores>
    </configStores>
    <!-- DOMAINS -->
    <domainManager defaultProvider="config">
      <providers>
        <clear />
        <add name="config" type="Sitecore.SecurityModel.ConfigDomainProvider, Sitecore.Kernel" domainList="domainManager/domains" defaultDomain="sitecore" />
      </providers>
      <!-- Sample for use with config provider above -->
      <domains>
        <domain id="sitecore" type="Sitecore.Security.Domains.Domain, Sitecore.Kernel">
          <param desc="name">$(id)</param>
          <ensureAnonymousUser>false</ensureAnonymousUser>
        </domain>
        <domain id="extranet" type="Sitecore.Security.Domains.Domain, Sitecore.Kernel">
          <param desc="name">$(id)</param>
          <ensureAnonymousUser>true</ensureAnonymousUser>
        </domain>
        <domain id="default" type="Sitecore.Security.Domains.Domain, Sitecore.Kernel">
          <param desc="name">$(id)</param>
          <ensureAnonymousUser>true</ensureAnonymousUser>
          <isDefault>true</isDefault>
        </domain>
      </domains>
    </domainManager>
    <!-- LinkManager -->
    <linkManager defaultProvider="sitecore">
      <providers>
        <clear/>
        <add name="sitecore" type="Sitecore.Links.LinkProvider, Sitecore.Kernel" addAspxExtension="true" alwaysIncludeServerUrl="false" encodeNames="true" languageEmbedding="asNeeded" languageLocation="filePath" lowercaseUrls="false" shortenUrls="true" useDisplayName="false"/>
      </providers>
    </linkManager>
    <!-- STANDARD VALUES -->
    <standardValues defaultProvider="sitecore">
      <providers>
        <clear />
        <add name="sitecore" type="Sitecore.Data.StandardValuesProvider, Sitecore.Kernel" />
      </providers>
    </standardValues>
    <!--  SITES -->
    <siteManager defaultProvider="config">
      <providers>
        <clear />
          <add name="config" type="Sitecore.Sites.ConfigSiteProvider, Sitecore.Kernel" siteList="sites" checkSecurity="false" />
      </providers>
    </siteManager>
    <!-- MEDIA -->
    <mediaLibrary>
      <!-- MEDIA REQUEST PREFIXES
     Allows you to configure additional media prefixes (in addition to the prefix defined by the Media.MediaLinkPrefix setting)
     The prefixes are used by Sitecore to recognize media URLs.
     Notice: For each custom media prefix, you must also add a corresponding entry to the <customHandlers> section
        -->
      <mediaPrefixes>
        <!-- Example  <prefix value="-/media"/>  -->
      </mediaPrefixes>
      <requestParser type="Sitecore.Resources.Media.MediaRequest, Sitecore.Kernel" />
      <mediaTypes>
        <mediaType name="Any" extensions="*">
          <mimeType>application/octet-stream</mimeType>
          <forceDownload>true</forceDownload>
          <sharedTemplate>system/media/unversioned/file</sharedTemplate>
          <versionedTemplate>system/media/versioned/file</versionedTemplate>
          <metaDataFormatter type="Sitecore.Resources.Media.MediaMetaDataFormatter" />
          <mediaValidator type="Sitecore.Resources.Media.MediaValidator" />
          <thumbnails>
            <generator type="Sitecore.Resources.Media.MediaThumbnailGenerator, Sitecore.Kernel">
              <extension>png</extension>
              <filePath>/sitecore/shell/themes/standard/images/document_music.png</filePath>
            </generator>
            <width>150</width>
            <height>150</height>
            <backgroundColor>#FFFFFF</backgroundColor>
          </thumbnails>
          <prototypes>
            <media type="Sitecore.Resources.Media.Media, Sitecore.Kernel" />
            <mediaData type="Sitecore.Resources.Media.MediaData, Sitecore.Kernel" />
          </prototypes>
        </mediaType>
        <mediaType name="Windows Bitmap image" extensions="bmp">
          <mimeType>image/bmp</mimeType>
          <forceDownload>false</forceDownload>
          <sharedTemplate>system/media/unversioned/image</sharedTemplate>
          <versionedTemplate>system/media/versioned/image</versionedTemplate>
          <mediaValidator type="Sitecore.Resources.Media.ImageValidator" />
          <thumbnails>
            <generator type="Sitecore.Resources.Media.ImageThumbnailGenerator, Sitecore.Kernel">
              <extension>png</extension>
            </generator>
            <width>150</width>
            <height>150</height>
            <backgroundColor>#FFFFFF</backgroundColor>
          </thumbnails>
          <prototypes>
            <media type="Sitecore.Resources.Media.ImageMedia, Sitecore.Kernel" />
          </prototypes>
        </mediaType>
        <mediaType name="Flash" extensions="swf">
          <mimeType>application/x-shockwave-flash</mimeType>
          <forceDownload>false</forceDownload>
          <sharedTemplate>system/media/unversioned/Flash</sharedTemplate>
          <versionedTemplate>system/media/versioned/Flash</versionedTemplate>
          <thumbnails>
            <generator type="Sitecore.Resources.Media.MediaThumbnailGenerator, Sitecore.Kernel">
              <extension>png</extension>
            </generator>
            <staticFile>/sitecore/shell/Themes/standard/images/flash.png</staticFile>
          </thumbnails>
          <prototypes>
            <media type="Sitecore.Resources.Media.SwfMedia, Sitecore.Kernel" />
          </prototypes>
        </mediaType>
        <mediaType name="GIF image" extensions="gif">
          <mimeType>image/gif</mimeType>
          <forceDownload>false</forceDownload>
          <sharedTemplate>system/media/unversioned/image</sharedTemplate>
          <versionedTemplate>system/media/versioned/image</versionedTemplate>
          <mediaValidator type="Sitecore.Resources.Media.ImageValidator" />
          <thumbnails>
            <generator type="Sitecore.Resources.Media.ImageThumbnailGenerator, Sitecore.Kernel">
              <extension>png</extension>
            </generator>
            <width>150</width>
            <height>150</height>
            <backgroundColor>#FFFFFF</backgroundColor>
          </thumbnails>
          <prototypes>
            <media type="Sitecore.Resources.Media.ImageMedia, Sitecore.Kernel" />
          </prototypes>
        </mediaType>
        <mediaType name="JPEG image" extensions="jpg, jpeg">
          <mimeType>image/jpeg</mimeType>
          <forceDownload>false</forceDownload>
          <sharedTemplate>system/media/unversioned/jpeg</sharedTemplate>
          <versionedTemplate>system/media/versioned/jpeg</versionedTemplate>
          <mediaValidator type="Sitecore.Resources.Media.ImageValidator" />
          <thumbnails>
            <generator type="Sitecore.Resources.Media.ImageThumbnailGenerator, Sitecore.Kernel">
              <extension>png</extension>
            </generator>
            <width>150</width>
            <height>150</height>
            <backgroundColor>#FFFFFF</backgroundColor>
          </thumbnails>
          <prototypes>
            <media type="Sitecore.Resources.Media.JpegMedia, Sitecore.Kernel" />
          </prototypes>
        </mediaType>
        <mediaType name="MP3" extensions="mp3">
          <mimeType>audio/mp3</mimeType>
          <forceDownload>false</forceDownload>
          <sharedTemplate>system/media/unversioned/mp3</sharedTemplate>
          <versionedTemplate>system/media/versioned/mp3</versionedTemplate>
          <prototypes>
            <media type="Sitecore.Resources.Media.Mp3Media, Sitecore.Kernel" />
          </prototypes>
        </mediaType>
        <mediaType name="PDF file" extensions="pdf">
          <mimeType>application/pdf</mimeType>
          <forceDownload>false</forceDownload>
          <sharedTemplate>system/media/unversioned/pdf</sharedTemplate>
          <versionedTemplate>system/media/versioned/pdf</versionedTemplate>
        </mediaType>
        <mediaType name="PNG image" extensions="png">
          <mimeType>image/png</mimeType>
          <forceDownload>false</forceDownload>
          <sharedTemplate>system/media/unversioned/image</sharedTemplate>
          <versionedTemplate>system/media/versioned/image</versionedTemplate>
          <mediaValidator type="Sitecore.Resources.Media.ImageValidator" />
          <thumbnails>
            <generator type="Sitecore.Resources.Media.ImageThumbnailGenerator, Sitecore.Kernel">
              <extension>png</extension>
            </generator>
            <width>150</width>
            <height>150</height>
            <backgroundColor>#FFFFFF</backgroundColor>
          </thumbnails>
          <prototypes>
            <media type="Sitecore.Resources.Media.ImageMedia, Sitecore.Kernel" />
          </prototypes>
        </mediaType>
        <mediaType name="Zip file" extensions="zip">
          <mimeType>application/x-zip-compressed</mimeType>
          <forceDownload>true</forceDownload>
          <sharedTemplate>system/media/unversioned/zip</sharedTemplate>
          <versionedTemplate>system/media/versioned/zip</versionedTemplate>
          <metaDataFormatter type="Sitecore.Resources.Media.ZipMetaDataFormatter" />
          <prototypes>
            <media type="Sitecore.Resources.Media.ZipMedia, Sitecore.Kernel" />
          </prototypes>
        </mediaType>
        <mediaType name="Word document" extensions="doc">
          <mimeType>application/msword</mimeType>
          <forceDownload>true</forceDownload>
          <sharedTemplate>system/media/unversioned/doc</sharedTemplate>
          <versionedTemplate>system/media/versioned/doc</versionedTemplate>
        </mediaType>
        <mediaType name="Word 2007 document" extensions="docx">
          <mimeType>application/vnd.openxmlformats-officedocument.wordprocessingml.document</mimeType>
          <forceDownload>true</forceDownload>
          <sharedTemplate>system/media/unversioned/docx</sharedTemplate>
          <versionedTemplate>system/media/versioned/docx</versionedTemplate>
        </mediaType>
      </mediaTypes>
      <watcher>
        <ignoreList>
          <ignore contains="icon16x16" />
          <ignore contains="icon32x32" />
          <ignore contains="icon48x48" />
          <ignore contains="_thumb" />
          <ignorepath contains=".svn" />
        </ignoreList>
      </watcher>
    </mediaLibrary>

    <clientDataStore type="FixtureDataProvider.FixtureClientDataStore, FixtureDataProvider">
      <param connectionStringName="core" />
      <param desc="object lifetime">00:20:00</param>
    </clientDataStore>

    <switchingProviders>
      <membership>
        <provider providerName="fake" storeFullNames="true" wildcard="%" domains="*" />
      </membership>
      <roleManager>
        <provider providerName="fake" storeFullNames="true" wildcard="%" domains="*" />
      </roleManager>
      <profile>
        <provider providerName="fake" storeFullNames="true" wildcard="%" domains="*" />
      </profile>
    </switchingProviders>
    
  </sitecore>
  
  <log4net>
    <root>
      <priority value="NONE" />
    </root>
  </log4net>

  <system.web>
    <membership defaultProvider="sitecore" hashAlgorithmType="SHA1">
      <providers>
        <clear />
        <add name="sitecore" type="Sitecore.Security.SitecoreMembershipProvider, Sitecore.Kernel" realProviderName="fake" providerWildcard="%" raiseEvents="true" />
        <add name="fake" type="FixtureDataProvider.FakeMembershipProvider, FixtureDataProvider" />
        <add name="switcher" type="Sitecore.Security.SwitchingMembershipProvider, Sitecore.Kernel" applicationName="sitecore" mappings="switchingProviders/membership" />
      </providers>
    </membership>
    <roleManager defaultProvider="sitecore" enabled="true">
      <providers>
        <clear />
        <add name="sitecore" type="Sitecore.Security.SitecoreRoleProvider, Sitecore.Kernel" realProviderName="fake" raiseEvents="true" />
        <add name="fake" type="FixtureDataProvider.FakeRoleProvider, FixtureDataProvider" />
        <add name="switcher" type="Sitecore.Security.SwitchingRoleProvider, Sitecore.Kernel" applicationName="sitecore" mappings="switchingProviders/roleManager" />
      </providers>
    </roleManager>
    <profile defaultProvider="fake" enabled="true" inherits="Sitecore.Security.UserProfile, Sitecore.Kernel">
      <providers>
        <clear />
        <add name="fake" type="FixtureDataProvider.FakeProfileProvider, FixtureDataProvider" />
        <add name="switcher" type="Sitecore.Security.SwitchingProfileProvider, Sitecore.Kernel" applicationName="sitecore" mappings="switchingProviders/profile" />
      </providers>
      <properties>
        <clear />
        <add type="System.String" name="SC_UserData" />
      </properties>
    </profile>
  </system.web>
  
</configuration>